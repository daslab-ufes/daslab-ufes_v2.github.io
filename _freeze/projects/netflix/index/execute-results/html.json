{
  "hash": "6bdc35bad16301a0e2d3a3c081801821",
  "result": {
    "markdown": "---\ntitle: \"Analisando Bases de Dados: Meus Dados da Netflix\"\ntitle-block-banner: banner.jpeg\ndraft: false\nimage: \"capa-netflix.jpeg\"\nsearch: false\ndate: 2023-05-29\ndescription: \"Analisando meus dados de consumo da Netflix, utilizando Python para programação, plotly para visualização interativa e expressões regulares (regex) para extração de informações de texto de colunas.\"\nauthor: \n  - José Carlos S. Junior\ncategories: \n  - Python\n  - EDA\n  - Plotly\n  - regex\ntoc: true\nexecute:\n  echo: true\n  freeze: true\nformat: \n  html:\n    page-layout: full\n    code-fold: true\n    code-tools: false\n---\n\n# Introdução \n\nCom o objetivo de demonstrar os procedimentos que realizo, desde a limpeza dos dados até a criação de gráficos para obter insights visuais, irei trabalhar com os dados da conta da Netflix utilizada por mim e minha família. Uma vantagem dessa abordagem é o fato de eu ter um conhecimento aprofundado sobre os indivíduos envolvidos nos dados, o que me permite identificar facilmente se os resultados estão condizentes com a realidade. Meu objetivo é realizar um tratamento adequado dos dados, garantindo que os resultados sejam coerentes e reflitam fielmente os padrões observados, levando em consideração meu conhecimento prévio dessas informações. Ao longo da análise, será possível verificar a consistência dos resultados e sua correspondência com a realidade, considerando meu conhecimento próximo e individual dessa realidade por trás da qual os dados foram gerados.\n\nO processo de obtenção dos dados é simples. Basta solicitar os dados por meio da conta Netflix e, em seguida, uma pasta com arquivos será disponibilizada via e-mail para efetuar o download. O passo a passo pode ser verificado em [Beginner Python Tutorial: Analyze Your Personal Netflix Data](https://www.dataquest.io/blog/python-tutorial-analyze-personal-netflix-data/). Dentre os arquivos, utilizarei apenas o `ViewingActivity.csv`, localizado na pasta `CONTENT_INTERACTION`.\n\nO código-fonte será ocultado neste projeto, com o objetivo de preservar informações pessoais. No entanto, os códigos utilizados na limpeza dos dados e na construção de gráficos permanecerão disponíveis ao longo do texto. \n\n# Descrição das variáveis\n\nEntre os arquivos obtidos, há um PDF chamado \"Folha de Capa\" que contém as informações de cada variável. Para as variáveis da base presente no arquivo `ViewingActivity.csv`, temos o seguinte:\n\n- **Profile Name** – o nome do perfil usado para assistir.\n- **Start Time** – a data e a hora (UTC) do início da visualização.\n- **Duration** – a duração da sessão.\n- **Attributes** – esta coluna mostra detalhes adicionais das interações com o conteúdo\nacessado, quando disponíveis:\n   - **Autoplayed**: user action: None” – significa que o assinante não interagiu\ncom essa série ou filme.\n   - **Autoplayed**: user action: Unspecified” – significa que o assinante interagiu\ncom a série ou o filme (clicando na imagem da caixa e visualizando a página da\nsérie ou do filme enquanto é apresentado o conteúdo automático) ou que\nassistiu ao conteúdo automático por mais de 2 minutos.\n   - **Autoplayed**: user action: User_Interaction” – significa que o assinante\ninteragiu com a série ou o filme em um navegador clicando nos controles do\nplayer ou utilizando os atalhos do teclado.\n   - **View was hidden** – indica que a série ou filme foi marcado como “Ocultar do\nhistórico do que foi assistido” nas configurações da conta.\n   - **Has branched playback** – indica que o assinante pode escolher opções\nenquanto assiste ao título, para controlar o que acontece em seguida.\n- **Title** – a série ou o filme assistido.\n- **Supplemental Video Type** – vídeos que não sejam uma série ou um filme, como\ntrailers ou montagens.\n   -  A referência “N/A” significa “não se aplica”.\n- **Device Type** – o tipo de aparelho utilizado para acessar a série ou o filme.\n- **Bookmark** – a posição de visualização mais recente (em relação à duração total da\nsérie ou do filme) da sessão de reprodução específica de uma série ou um filme.\n- **Latest Bookmark** – indica se o marcador é a posição de visualização mais recente\n(em relação à duração total da série ou do filme) na sessão de reprodução mais\nrecente de uma série ou filme.\n   - **Not latest view** – indica que uma determinada sessão de reprodução não é a\nreprodução mais recente da série ou do filme e que, portanto, o marcador não é\no mais recente.\n- **Country** – o país de onde a série ou o filme foi assistido. As partir de 1º de abril de\n2018, para assinantes na União Europeia que viajam por até 60 dias de um país para\noutros países da União Europeia, este é o país em que a conta foi criada e não o país\nem que a série ou o filme foi assistido.\n\nAs variáveis **Attributes**, **Bookmark** e **Latest Bookmark** não serão consideradas, pois não consegui compreender claramente a informação que cada uma representa devido às suas descrições. Além disso, como minha família nunca saiu do país, a variável **Country** também será desconsiderada.\n \n# Tratamento dos dados\n\nInicialmente, após carregar os dados, transformei os nomes das colunas em letras minúsculas, seguindo as boas práticas de análise. Ao verificar as dimensões da base de dados, podemos observar pelo **Output 1** que temos 10.974 observações e 10 variáveis, sem nenhum caso duplicado.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Carrega as bibliotecas para manipulação dos dados\nimport pandas as pd\nimport numpy as np\n# Carrega pacote para visualização de dados\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n# Regex\nimport re\n\n# Carrega os dados\ndf_netflix = pd.read_csv(\"datasets/ViewingActivity.csv\")\n# Nome das variáveis padronizadas para lowercase\ndf_netflix.columns = df_netflix.columns.str.lower()\n# Número de linhas e colunas da base (10974, 10)\nprint('Número de linhas e colunas da base:', df_netflix.shape)\n# Nenhum caso duplicado encontrado\nprint('Casos duplicados na base:', df_netflix.duplicated().sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNúmero de linhas e colunas da base: (10974, 10)\nCasos duplicados na base: 0\n```\n:::\n:::\n\n\n\n\n**Output 1**: Informações de dimensão da base de dados e detecção de casos duplicados.\n\nNo **Output 2**, são apresentadas as cinco primeiras linhas da base de dados. Uma observação importante é que, entre as variáveis a serem consideradas, as colunas **title** e **device type** contêm informações múltiplas que precisarão ser separadas posteriormente para uma análise mais precisa. Além disso, as variáveis **start time** e **duration** são dados relacionados a tempo e data, e serão tratadas como tal.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Print das cinco primeiras linhas da base de\ndf_netflix.head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>profile name</th>\n      <th>start time</th>\n      <th>duration</th>\n      <th>attributes</th>\n      <th>title</th>\n      <th>supplemental video type</th>\n      <th>device type</th>\n      <th>bookmark</th>\n      <th>latest bookmark</th>\n      <th>country</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Mãe</td>\n      <td>2023-05-19 19:19:51</td>\n      <td>00:27:35</td>\n      <td>Autoplayed: user action: User_Interaction;</td>\n      <td>Black Knight: Temporada 1: Episódio 4 (Episódi...</td>\n      <td>NaN</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:27:39</td>\n      <td>00:27:39</td>\n      <td>BR (Brazil)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Mãe</td>\n      <td>2023-05-19 18:09:15</td>\n      <td>00:44:45</td>\n      <td>Autoplayed: user action: User_Interaction;</td>\n      <td>Black Knight: Temporada 1: Episódio 3 (Episódi...</td>\n      <td>NaN</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:44:50</td>\n      <td>00:44:50</td>\n      <td>BR (Brazil)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Mãe</td>\n      <td>2023-05-19 17:39:51</td>\n      <td>00:29:21</td>\n      <td>NaN</td>\n      <td>Black Knight: Temporada 1: Episódio 2 (Episódi...</td>\n      <td>NaN</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:47:02</td>\n      <td>00:47:02</td>\n      <td>BR (Brazil)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Mãe</td>\n      <td>2023-05-18 19:46:26</td>\n      <td>00:13:07</td>\n      <td>Autoplayed: user action: User_Interaction;</td>\n      <td>Black Knight: Temporada 1: Episódio 2 (Episódi...</td>\n      <td>NaN</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:17:43</td>\n      <td>Not latest view</td>\n      <td>BR (Brazil)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Mãe</td>\n      <td>2023-05-17 19:35:06</td>\n      <td>00:04:34</td>\n      <td>Autoplayed: user action: User_Interaction;</td>\n      <td>Black Knight: Temporada 1: Episódio 2 (Episódi...</td>\n      <td>NaN</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:04:38</td>\n      <td>Not latest view</td>\n      <td>BR (Brazil)</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 2**: Primeiras cinco linhas da base de dados.\n\n## Dados faltantes\n\nEm relação aos dados faltantes, podemos notar pelo **Output 3** que eles se concentram nas variáveis **attributes** e **supplemental video type**. Porém, como **attributes** não será considerada, minha preocupação passa a ser apenas com a variável **supplemental video type**.\n\nApós refletir sobre a descrição e examinar as informações disponíveis nessa variável, pude perceber que **supplemental video type** identifica todos os tipos de conteúdo que não sejam filmes ou séries, atribuindo-lhes um label, como trailers ou teasers. No caso em que a linha se refere a um filme ou série, nenhum valor é atribuído e é representado como um dado faltante. Curiosamente, todos os 7804 casos identificados como dados faltantes no **Output 3** são, na verdade, os dados de interesse (filmes e séries), enquanto os demais serão desconsiderados.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Tabela dos dados faltantes\npd.DataFrame(df_netflix.isnull().sum(), columns = ['Dados faltantes totais de cada coluna'])\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dados faltantes totais de cada coluna</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>profile name</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>start time</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>duration</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>attributes</th>\n      <td>4671</td>\n    </tr>\n    <tr>\n      <th>title</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>supplemental video type</th>\n      <td>7804</td>\n    </tr>\n    <tr>\n      <th>device type</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>bookmark</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>latest bookmark</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>country</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 3**: Dados faltantes de cada coluna.\n\nPor curiosidade, no **Output 4**, podemos observar os totais de cada tipo de vídeo na base de dados, agora incluindo filmes e séries. Além disso, observe que o rótulo desses dados de interesse é agora classificado como \"FILME OU SERIE\", ou seja, não faz distinção entre filmes e séries. Posteriormente, será interessante separar essas informações para uma análise mais detalhada.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Atribui 'FILME OU SERIE' aos dados faltantes para a variável 'supplemental video type'\ndf_netflix['supplemental video type'].fillna('FILME OU SERIE', inplace = True)\n# Tabela dos totais de cada tipo de video\n(pd.DataFrame(df_netflix['supplemental video type'].value_counts()).\n        rename(columns = {'supplemental video type': 'Totais de cada tipo de video'}))\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Totais de cada tipo de video</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>FILME OU SERIE</th>\n      <td>7804</td>\n    </tr>\n    <tr>\n      <th>HOOK</th>\n      <td>2060</td>\n    </tr>\n    <tr>\n      <th>TRAILER</th>\n      <td>838</td>\n    </tr>\n    <tr>\n      <th>TEASER_TRAILER</th>\n      <td>224</td>\n    </tr>\n    <tr>\n      <th>RECAP</th>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>PREVIEW</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>PROMOTIONAL</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>MARKETING_TRAILER</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>BUMPER</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>CINEMAGRAPH</th>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 4**: Totais de cada tipo de video identificados na coluna **supplemental video type**.\n\nNo **Output 5**, temos uma verificação dos tipos de vídeos encontrados na variável **supplemental video type**, ao desconsiderar os tipos que não são de interesse na análise. Assim, a base de dados agora possui 7.804 observações.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Considera apenas os dados referentes a filmes ou séries\ndf_netflix2 = df_netflix.query(\"`supplemental video type` == 'FILME OU SERIE'\")\n\nprint(\"Os tipos de videos na coluna 'supplemental video type' são:\", df_netflix2['supplemental video type'].unique())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOs tipos de videos na coluna 'supplemental video type' são: ['FILME OU SERIE']\n```\n:::\n:::\n\n\n**Output 5**: Verificação dos tipos de videos na variável **supplemental video type** após o filtro \"FILME OU SERIE\".\n\n## Variáveis de data e tempo\n\nAnteriormente, mencionei sobre as variáveis **start time** e **duration**, que representam informações de data e tempo. Para a coluna **start time**, utilizei inicialmente o método `to_datetime()` da biblioteca `pandas` para convertê-la em um objeto manipulável de data, considerando o Tempo Universal Coordenado (UTC). Em seguida, realizei a conversão de UTC para o fuso horário Brazil/East, que corresponde ao fuso horário da minha localização e da minha família. Esse passo é importante para garantir que a análise seja realizada com informações corretas. Além disso, extraí os dias da semana da coluna **start time** e os armazenei em uma nova coluna chamada **dias eng**. Essa informação é retornada em inglês, e então criei outra coluna chamada **dias pt** para traduzir os dias para o português, utilizando um dicionário.\n\nJá a variável **duration** representa o tempo de duração da sessão ou consumo de um filme ou série, a partir do momento especificado em **start time**. Nesse caso, extrai as informações de duração em minutos, horas e dias, e as armazenei nas novas colunas **duration m**, **duration h** e **duration d**, respectivamente.\n\nNo **Output 6**, é possível visualizar o tipo de objeto de cada coluna após os devidos tratamentos.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Atribui uma cópia da base até então para evitar warnings desnecessários\ndf_netflix2 = df_netflix2.copy()\n# Converte em objeto para manipulação de datas (considerando tempo universal coordenado UTC)\ndf_netflix2['start time'] = pd.to_datetime(df_netflix2['start time'], utc = True)\n# Encaixa a variável 'start time' como índice \ndf_netflix2 = df_netflix2.set_index('start time')\n# Converte do tempo universal coordenado para Brazil/East\ndf_netflix2.index = df_netflix2.index.tz_convert('Brazil/East')\n# Cria coluna com os dias da semana\ndf_netflix2['dias eng'] = df_netflix2.index.strftime('%A')\n# Retorna o index como coluna novamente\ndf_netflix2 = df_netflix2.reset_index()\n# Dicionário dos dias da semana em en para pt-br \ndays_dictionary = {'Monday': 'Segunda-feira',\n                   'Tuesday': 'Terça-feira',\n                   'Wednesday': 'Quarta-feira',\n                   'Thursday': 'Quinta-feira',\n                   'Friday': 'Sexta-feira',\n                   'Saturday': 'Sábado',\n                   'Sunday': 'Domingo'}\n# Coluna com os dias da semana em pt-br\ndf_netflix2['dias pt'] = df_netflix2['dias eng'].map(days_dictionary)\n# Ordem em que os dias da semana serão definidos\nordem_diasdasemana = ['Segunda-feira', 'Terça-feira', 'Quarta-feira', \n                      'Quinta-feira', 'Sexta-feira', 'Sábado', 'Domingo']\n# Converte a variável 'dias pt' para categórica ordinal\ndf_netflix2['dias pt'] = pd.Categorical(df_netflix2['dias pt'],\n                                        categories = ordem_diasdasemana,\n                                        ordered = True)\n\n# Converte a duração para minutos\ndf_netflix2['duration m'] = pd.to_timedelta(df_netflix2['duration']).dt.total_seconds() / 60\n# Converte a duração para horas\ndf_netflix2['duration h'] = pd.to_timedelta(df_netflix2['duration']).dt.total_seconds() / (60 * 60)\n# Converte a duração para dias\ndf_netflix2['duration d'] = pd.to_timedelta(df_netflix2['duration']).dt.total_seconds() / (24 * 60 * 60)\n\n# Tabela dos tipos de cada coluna\npd.DataFrame(df_netflix2.dtypes).rename(columns = {0: 'Tipo'})\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Tipo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>start time</th>\n      <td>datetime64[ns, Brazil/East]</td>\n    </tr>\n    <tr>\n      <th>profile name</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>duration</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>attributes</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>title</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>supplemental video type</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>device type</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>bookmark</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>latest bookmark</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>country</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>dias eng</th>\n      <td>object</td>\n    </tr>\n    <tr>\n      <th>dias pt</th>\n      <td>category</td>\n    </tr>\n    <tr>\n      <th>duration m</th>\n      <td>float64</td>\n    </tr>\n    <tr>\n      <th>duration h</th>\n      <td>float64</td>\n    </tr>\n    <tr>\n      <th>duration d</th>\n      <td>float64</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 6**: Tipos de objetos de cada coluna.\n\nObserve no **Output 7** que a variável **start time** indica 16 horas, 19 minutos e 51 segundos, o que corresponde a 3 horas a menos em relação ao **Output 2**. Isso ocorre porque o fuso horário Brazil/East tem uma diferença de exatamente 3 horas em relação ao UTC. Ao verificar a descrição da variável **start time**, é possível notar que os dados já estão no formato UTC. Em outras palavras, a conversão para UTC não era estritamente necessária (embora seja importante realizar essas etapas para garantir a consistência dos dados), e agora as informações estão apresentadas no fuso horário correto.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Primeira linha da base\ndf_netflix2.head(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>start time</th>\n      <th>profile name</th>\n      <th>duration</th>\n      <th>attributes</th>\n      <th>title</th>\n      <th>supplemental video type</th>\n      <th>device type</th>\n      <th>bookmark</th>\n      <th>latest bookmark</th>\n      <th>country</th>\n      <th>dias eng</th>\n      <th>dias pt</th>\n      <th>duration m</th>\n      <th>duration h</th>\n      <th>duration d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2023-05-19 16:19:51-03:00</td>\n      <td>Mãe</td>\n      <td>00:27:35</td>\n      <td>Autoplayed: user action: User_Interaction;</td>\n      <td>Black Knight: Temporada 1: Episódio 4 (Episódi...</td>\n      <td>FILME OU SERIE</td>\n      <td>Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n      <td>00:27:39</td>\n      <td>00:27:39</td>\n      <td>BR (Brazil)</td>\n      <td>Friday</td>\n      <td>Sexta-feira</td>\n      <td>27.583333</td>\n      <td>0.459722</td>\n      <td>0.019155</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 7**: Primeira linha da base de dados.\n\nConsiderando o tempo de duração de cada sessão, conforme informado pelas variáveis \"duration\", o **Output 8** apresenta algumas estatísticas descritivas. Observa-se que o tempo mínimo de duração encontrado na base de dados é de 0,016667 minutos, conforme indicado pela variável **duration m**. Esse valor pode ser explicado pelas vezes em que um filme ou série foi aberto, mas logo em seguida perdemos o interesse em assistir ou clicamos por acidente. \n\nPara fins de análise, decidi considerar apenas as informações com duração mínima de 2 minutos. Essa escolha é arbitrária e baseada na minha percepção de que 2 minutos são suficientes para entender que a pessoa clicou no filme ou série com a intenção de assistir, e manteve um tempo razoável para, pelo menos, confirmar que não foi um clique acidental. \n\nAssim, o número de observações da base de dados foi reduzida para 5.552.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Medidas descritivas básicas das variáveis numéricas\ndf_netflix2.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>duration m</th>\n      <th>duration h</th>\n      <th>duration d</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>7804.000000</td>\n      <td>7804.000000</td>\n      <td>7804.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>27.916718</td>\n      <td>0.465279</td>\n      <td>0.019387</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>27.681499</td>\n      <td>0.461358</td>\n      <td>0.019223</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.016667</td>\n      <td>0.000278</td>\n      <td>0.000012</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.583333</td>\n      <td>0.043056</td>\n      <td>0.001794</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>22.066667</td>\n      <td>0.367778</td>\n      <td>0.015324</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>42.833333</td>\n      <td>0.713889</td>\n      <td>0.029745</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>184.166667</td>\n      <td>3.069444</td>\n      <td>0.127894</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 8**: Medidas descritivas das variáveis numéricas.\n\n## Extraindo informações de textos com expressões regulares (regex)\n\nRetornando ao problema mencionado nas variáveis **title** e **device type**, é importante notar, conforme mostrado no **Output 9**, que a coluna **title** contém informações sobre o título do filme ou série, bem como a temporada e o episódio, quando aplicável. Essas informações precisarão ser separadas adequadamente para uma análise mais precisa. Além disso, a variável **device type**, que indica o dispositivo utilizado para acessar a Netflix, contém informações específicas sobre o dispositivo em questão. No entanto, podemos extrair informações mais relevantes, como se o acesso foi feito por meio de uma TV, computador (PC) ou celular, por exemplo. Essa extração pode facilitar a realização de uma análise mais eficiente dos dados.\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Filtrando a base mantendo apenas os casos com 2 minutos ou mais de duração (5552, 15)\ndf_netflix2 = df_netflix2[df_netflix2['duration m'] >= 2]\n\n# Cria dataframe com a coluna dos 10 primeiros titulos na base de dados\ntitulodispositivo = (\n  pd.DataFrame(df_netflix2['title'].unique()).\n      rename(columns = {0: '10 primeiros títulos da base'}).\n      head(10)\n)\n# Adiciona ao dataframe a lista de dispositivos únicos na base de dados utilizados para assistir filmes e séries\ntitulodispositivo['Todos os dispositivos únicos da base'] = df_netflix2['device type'].unique()\n# Cria objeto de estilo a partir do dataframe\nstyler = titulodispositivo.style\n# Esconde os índices, pois, nesse caso, as linhas entre as colunas não correspondem\nstyler.hide(axis = \"index\")\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<style type=\"text/css\">\n</style>\n<table id=\"T_e2778\">\n  <thead>\n    <tr>\n      <th id=\"T_e2778_level0_col0\" class=\"col_heading level0 col0\" >10 primeiros títulos da base</th>\n      <th id=\"T_e2778_level0_col1\" class=\"col_heading level0 col1\" >Todos os dispositivos únicos da base</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_e2778_row0_col0\" class=\"data row0 col0\" >Black Knight: Temporada 1: Episódio 4 (Episódio 4)</td>\n      <td id=\"T_e2778_row0_col1\" class=\"data row0 col1\" >Samsung 2018 Kant-M2 UHD TV (1.5G) Smart TV</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row1_col0\" class=\"data row1 col0\" >Black Knight: Temporada 1: Episódio 3 (Episódio 3)</td>\n      <td id=\"T_e2778_row1_col1\" class=\"data row1 col1\" >TCL 2K18 FHD UnionTV Smart TV</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row2_col0\" class=\"data row2 col0\" >Black Knight: Temporada 1: Episódio 2 (Episódio 2)</td>\n      <td id=\"T_e2778_row2_col1\" class=\"data row2 col1\" >Netflix Linux Firefox Other</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row3_col0\" class=\"data row3 col0\" >Black Knight: Temporada 1: Episódio 1 (Episódio 1)</td>\n      <td id=\"T_e2778_row3_col1\" class=\"data row3 col1\" >Firefox PC (Cadmium)</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row4_col0\" class=\"data row4 col0\" >Vingança entre Assassinos</td>\n      <td id=\"T_e2778_row4_col1\" class=\"data row4 col1\" >Android DefaultWidevineL3Phone Android Phone (motorola_Moto G (5))</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row5_col0\" class=\"data row5 col0\" >Conta comigo</td>\n      <td id=\"T_e2778_row5_col1\" class=\"data row5 col1\" >Android DefaultWidevineL3Phone Android Phone</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row6_col0\" class=\"data row6 col0\" >Agente Infiltrado</td>\n      <td id=\"T_e2778_row6_col1\" class=\"data row6 col1\" >Edge OSS - Windows (Cadmium)</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row7_col0\" class=\"data row7 col0\" >Freaks - Um de Nós</td>\n      <td id=\"T_e2778_row7_col1\" class=\"data row7 col1\" >Chrome PC (Cadmium)</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row8_col0\" class=\"data row8 col0\" >The Last Kingdom: Seven Kings Must Die</td>\n      <td id=\"T_e2778_row8_col1\" class=\"data row8 col1\" >DefaultWidevineAndroidPhone</td>\n    </tr>\n    <tr>\n      <td id=\"T_e2778_row9_col0\" class=\"data row9 col0\" >Noé</td>\n      <td id=\"T_e2778_row9_col1\" class=\"data row9 col1\" >Netflix Windows Mobile 8 Windows 8</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n**Output 9**: Os 10 primeiros títulos e todos os dispositivos únicos da base de dados.\n\nPara separar corretamente as informações dessas variáveis, utilizei expressões regulares (regex). No caso da variável **title**, é possível observar que observações relacionadas a séries possuem um título seguido da temporada e do episódio, enquanto os filmes apresentam apenas o título. Com base nessa observação, criei uma nova coluna chamada **identf tipo**, na qual identifico se o conteúdo assistido naquela sessão é uma série ou um filme. Utilizando regex, verifiquei se o texto na variável **title** continha palavras como \"temporada\", \"season\", \"episódio\" ou \"episode\" (considerando também letras maiúsculas), classificando-o como série. Caso contrário, foi classificado como filme. Vale ressaltar que utilizei palavras em inglês para fazer essa classificação, pois meus pais assistem filmes e séries apenas em português, enquanto eu e meu irmão possuímos perfis em inglês e assistimos conteúdos nesse idioma. Dessa forma, os títulos também se diferenciam por idioma.\n\nEm seguida, criei a coluna **identf titulo** utilizando o mesmo método, no qual a regra estabelecida foi que o título sempre ocorre antes das palavras \"temporada\", \"season\", \"episódio\" ou \"episode\" (também considerando letras maiúsculas). Além disso, criei a coluna **identf temporada**, que identifica a temporada (caso seja uma série) por meio da extração da informação relacionada às palavras \"temporada\" e o respectivo número. O mesmo foi feito para extrair os episódios e preencher a coluna **identf episodio**.\n\nNo caso da coluna de dispositivos, extraí as informações relevantes para a coluna **identf device**, identificando se o dispositivo utilizado era uma TV por meio da palavra \"TV\". Para dispositivos móveis, como celulares, verifiquei as palavras \"Android\", \"Mobile\" ou \"Phone\". Quanto aos acessos feitos por computadores, identifiquei-os pelos nomes dos navegadores utilizados, como \"Chrome\", \"Firefox\", \"Edge\" ou \"Linux\". No entanto, vale mencionar que existe um dispositivo chamado \"Netflix Linux Firefox Other\" que não possui uma indicação clara sobre o tipo de dispositivo. Portanto, ao identificar as palavras \"Linux\" e \"Firefox\" para classificar como computador, poderia gerar informações incorretas na base de dados. No entanto, observe que todos os dispositivos que podem ser identificados com certeza como computadores possuem a palavra \"PC\" em seus nomes (exceto o Edge). Além disso, a palavra \"Cadmium\" é comum a todos os computadores. Portanto, também a utilizei para identificar corretamente os dispositivos. Quanto ao dispositivo \"Netflix Linux Firefox Other\", não foi atribuída nenhuma classificação devido à incerteza das informações apresentadas.\n\nNo **Output 10**, é possível visualizar a estrutura atualizada da base de dados, incluindo apenas as variáveis de interesse após as transformações realizadas.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# Cria coluna que identifica se é filme ou série utilizando regex\ndf_netflix2['identf tipo'] = df_netflix2['title'].apply(\n  lambda x: 'serie'\n  if re.search(r'temporada|season|episódio|episode', x, flags = re.IGNORECASE) \n  else 'filme'\n)\n\n# Cria coluna que identifica o título simplificado utilizando regex\ndf_netflix2['identf titulo'] = df_netflix2['title'].apply(\n  lambda x: re.search(r'(.*?)\\s?(?:temporada|season|episódio|episode)', x, flags = re.IGNORECASE).group(1).rstrip(':') \n  if re.search(r'temporada|season|episódio|episode', x, flags = re.IGNORECASE) \n  else x\n)\n\n# Cria coluna que identifica a temporada se for serie, e nan caso filme (usando regex)\ndf_netflix2['identf temporada'] = df_netflix2.apply(\n  lambda row: re.search(r'((?:temporada|Temporada|season|Season)\\s\\d+)', row['title'], flags = re.IGNORECASE).group(1) \n  if row['identf tipo'] == 'serie' \n  and re.search(r'(?:temporada|Temporada|season|Season)\\s(\\d+)', row['title'], flags = re.IGNORECASE) \n  else np.nan, axis = 1\n)\n\n# Cria coluna que identifica o episódio se for serie, e nan caso filme (usando regex)\ndf_netflix2['identf episodio'] = df_netflix2.apply(\n  lambda row: re.search(r'(?:episódio|Episódio|episode|Episode)\\s(\\d+)', row['title'], flags = re.IGNORECASE).group(0) \n  if row['identf tipo'] == 'serie' \n  and re.search(r'(?:episódio|Episódio|episode|Episode)\\s(\\d+)', row['title'], flags = re.IGNORECASE) \n  else np.nan, axis = 1\n)\n\n# Cria coluna que identifica o dispositivo usado para assistir (usando regex)\ndf_netflix2['identf device'] = df_netflix2['device type'].apply(\n  lambda x: 'tv' \n  if re.search(r'TV', x, flags = re.IGNORECASE) \n  else ('computador' if re.search(r'Edge|Cadmium|Chrome', x, flags = re.IGNORECASE) else (\n    'celular' if re.search(r'Android|Mobile|Phone', x, flags = re.IGNORECASE) else None\n    )\n  )\n)\n\n# Base de dados com apenas as variáveis de interesse\ndf_netflix3 = df_netflix2.drop(\n  ['attributes', 'supplemental video type', 'device type', 'duration', \n  'bookmark', 'latest bookmark', 'country', 'title', 'dias eng'], \n   axis = 1\n)\n\n# Print das 5 primeiras linhas\ndf_netflix3.head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>start time</th>\n      <th>profile name</th>\n      <th>dias pt</th>\n      <th>duration m</th>\n      <th>duration h</th>\n      <th>duration d</th>\n      <th>identf tipo</th>\n      <th>identf titulo</th>\n      <th>identf temporada</th>\n      <th>identf episodio</th>\n      <th>identf device</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2023-05-19 16:19:51-03:00</td>\n      <td>Mãe</td>\n      <td>Sexta-feira</td>\n      <td>27.583333</td>\n      <td>0.459722</td>\n      <td>0.019155</td>\n      <td>serie</td>\n      <td>Black Knight</td>\n      <td>Temporada 1</td>\n      <td>Episódio 4</td>\n      <td>tv</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2023-05-19 15:09:15-03:00</td>\n      <td>Mãe</td>\n      <td>Sexta-feira</td>\n      <td>44.750000</td>\n      <td>0.745833</td>\n      <td>0.031076</td>\n      <td>serie</td>\n      <td>Black Knight</td>\n      <td>Temporada 1</td>\n      <td>Episódio 3</td>\n      <td>tv</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2023-05-19 14:39:51-03:00</td>\n      <td>Mãe</td>\n      <td>Sexta-feira</td>\n      <td>29.350000</td>\n      <td>0.489167</td>\n      <td>0.020382</td>\n      <td>serie</td>\n      <td>Black Knight</td>\n      <td>Temporada 1</td>\n      <td>Episódio 2</td>\n      <td>tv</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2023-05-18 16:46:26-03:00</td>\n      <td>Mãe</td>\n      <td>Quinta-feira</td>\n      <td>13.116667</td>\n      <td>0.218611</td>\n      <td>0.009109</td>\n      <td>serie</td>\n      <td>Black Knight</td>\n      <td>Temporada 1</td>\n      <td>Episódio 2</td>\n      <td>tv</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2023-05-17 16:35:06-03:00</td>\n      <td>Mãe</td>\n      <td>Quarta-feira</td>\n      <td>4.566667</td>\n      <td>0.076111</td>\n      <td>0.003171</td>\n      <td>serie</td>\n      <td>Black Knight</td>\n      <td>Temporada 1</td>\n      <td>Episódio 2</td>\n      <td>tv</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Output 10**: Primeiras cinco linhas da base de dados com as variáveis de interesse.\n\n# Análise exploratória dos dados (EDA)\n\nNo **Output 11**, é possível verificar o tempo de uso de cada perfil ao assistir filmes e séries na Netflix. Eu e meu irmão apresentamos um tempo de uso bastante similar, enquanto que meu pai não utiliza muito a plataforma de forma individual. É muito comum ele assistir filmes e séries junto com minha mãe, ou quando assiste sozinho, utiliza o perfil dela. Isso pode explicar o motivo de o perfil dela ter o maior tempo de uso registrado.\n\nÉ importante observar que o perfil \"Família\" possui o menor tempo de uso. Isso ocorre porque, em geral, não costumamos nos reunir com frequência para assistir conteúdos juntos. Principalmente eu e meu irmão gostamos de nos concentrar e compreender cada detalhe da obra, além de discutir sobre ela posteriormente. Quando tentamos assistir todos juntos, certamente não é possível manter essa mesma imersão, principalmente porque meus pais detestam filmes e séries legendados ou sem legenda alguma, dando preferência a filmes dublados.\n\nLevando esses fatores em consideração, o perfil \"Família\" não será mais considerado daqui em diante. Os dados abrangem o período de 2017 a 2023 e fica claro que o uso desse perfil não é significativo para fazer qualquer tipo de comparação.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# Quantidade de dias assistindo Netflix para cada perfil\ndiasperfil = (df_netflix3.\n                groupby('profile name')[['duration h', 'duration d']].\n                sum().\n                reset_index().\n                sort_values(by = 'duration h', ascending = False).\n                rename(columns = {'profile name': 'Perfil', \n                                  'duration h': 'Horas', \n                                  'duration d': 'Dias'})\n                )\n\n# Cria objeto de estilo a partir do dataframe\nstyler = diasperfil.style\n# Formata o número de digitos da saída para 2 casas decimais\nformat_digitos = {'Horas': '{:.2f}', 'Dias': '{:.2f}'}\nstyler.format(format_digitos)\n# Esconde os índices, pois, nesse caso, o intuito é mostrar uma tabela\nstyler.hide(axis = \"index\")\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<style type=\"text/css\">\n</style>\n<table id=\"T_1d563\">\n  <thead>\n    <tr>\n      <th id=\"T_1d563_level0_col0\" class=\"col_heading level0 col0\" >Perfil</th>\n      <th id=\"T_1d563_level0_col1\" class=\"col_heading level0 col1\" >Horas</th>\n      <th id=\"T_1d563_level0_col2\" class=\"col_heading level0 col2\" >Dias</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_1d563_row0_col0\" class=\"data row0 col0\" >Mãe</td>\n      <td id=\"T_1d563_row0_col1\" class=\"data row0 col1\" >1341.27</td>\n      <td id=\"T_1d563_row0_col2\" class=\"data row0 col2\" >55.89</td>\n    </tr>\n    <tr>\n      <td id=\"T_1d563_row1_col0\" class=\"data row1 col0\" >Eu</td>\n      <td id=\"T_1d563_row1_col1\" class=\"data row1 col1\" >841.94</td>\n      <td id=\"T_1d563_row1_col2\" class=\"data row1 col2\" >35.08</td>\n    </tr>\n    <tr>\n      <td id=\"T_1d563_row2_col0\" class=\"data row2 col0\" >Irmão</td>\n      <td id=\"T_1d563_row2_col1\" class=\"data row2 col1\" >812.68</td>\n      <td id=\"T_1d563_row2_col2\" class=\"data row2 col2\" >33.86</td>\n    </tr>\n    <tr>\n      <td id=\"T_1d563_row3_col0\" class=\"data row3 col0\" >Pai</td>\n      <td id=\"T_1d563_row3_col1\" class=\"data row3 col1\" >618.74</td>\n      <td id=\"T_1d563_row3_col2\" class=\"data row3 col2\" >25.78</td>\n    </tr>\n    <tr>\n      <td id=\"T_1d563_row4_col0\" class=\"data row4 col0\" >Família</td>\n      <td id=\"T_1d563_row4_col1\" class=\"data row4 col1\" >5.69</td>\n      <td id=\"T_1d563_row4_col2\" class=\"data row4 col2\" >0.24</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n**Output 11**: Tempo em horas e dias de uso da Netflix de cada perfil.\n\nO **Output 12** sugere que, de maneira geral, todos na minha família assistem mais a séries do que filmes na Netflix, com exceção do meu pai, que parece preferir filmes em vez de séries. Essa preferência é evidente na realidade, pois ele não gosta de assistir algo sem um fim definido ou que demande muito tempo para ser concluído, permitindo-lhe dedicar-se a outras atividades diárias. Isso contrasta com as séries, que muitas vezes exigem várias horas ou até mesmo dias para serem finalizadas. É possível que uma parte significativa do tempo gasto assistindo aos filmes registrados no perfil da minha mãe seja resultado do meu pai assistindo sozinho ou assistindo em conjunto com ela.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# Desconsidera o perfil 'Família'\ndf_netflix3 = df_netflix3[~df_netflix3['profile name'].isin(['Família'])]\n\n# Agrupa os dados por duração considerando os perfis e tipo (filme ou série)\nprofiledevicetipo_group = (df_netflix3.\n                            groupby(['profile name', 'identf tipo'])['duration h'].\n                            sum().\n                            reset_index())\n\npivot_profiledevicetipo = profiledevicetipo_group.pivot(index = 'profile name',\n                                                        columns = 'identf tipo', \n                                                        values = 'duration h')\n\n# Traicing interativo das barras para cada tipo (filme ou série) e cria gráfico de barras\nfig = go.Figure()\nfor col in pivot_profiledevicetipo.columns:\n    fig.add_trace(go.Bar(\n        x = pivot_profiledevicetipo.index,\n        y = pivot_profiledevicetipo[col],\n        name = col,\n        hovertemplate = 'Horas: %{y:.2f}<br>'\n    ))\n\n# Layout do gráfico\nfig.update_layout(\n    barmode = 'stack',\n    title = 'Tempo (Horas) gasto assistindo filmes e séries em cada perfil',\n    xaxis_title = 'Perfis',\n    yaxis_title = 'Horas'\n)\nfig.update_yaxes(tickformat = 'h')\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"d49690ae-9124-4c13-845c-dbccf566bfe6\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"d49690ae-9124-4c13-845c-dbccf566bfe6\")) {                    Plotly.newPlot(                        \"d49690ae-9124-4c13-845c-dbccf566bfe6\",                        [{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"filme\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[80.75222222222223,118.87666666666667,500.4811111111111,320.40194444444444],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"serie\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[761.1858333333333,693.8080555555556,840.7847222222222,298.3330555555556],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"barmode\":\"stack\",\"title\":{\"text\":\"Tempo (Horas) gasto assistindo filmes e s\\u00e9ries em cada perfil\"},\"xaxis\":{\"title\":{\"text\":\"Perfis\"}},\"yaxis\":{\"title\":{\"text\":\"Horas\"},\"tickformat\":\"h\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('d49690ae-9124-4c13-845c-dbccf566bfe6');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 12**: Consumo da Netflix de cada perfil por Filmes e Séries.\n\nQuando se trata dos dispositivos de acesso, tanto eu quanto meu irmão passamos mais tempo utilizando a Netflix pelo computador. De acordo com o **Output 13**, isso é exatamente o que o gráfico sugere. Vale destacar que registrei um tempo considerável de 205 horas de uso da Netflix pelo celular. Isso se deve ao fato de que, durante o período em que os dados foram gerados (2017-2023), estive morando em outra cidade para estudar Estatística na faculdade. Nas férias, quando retorno à minha cidade natal, não tenho acesso a um computador e, portanto, costumo assistir à Netflix pelo celular, principalmente para assistir a animes.\n\nNo caso do perfil da minha mãe, a principal forma de acesso é por meio da TV, o que faz todo sentido, já que ela não usa computador. Sempre que ela utiliza a Netflix, é através da Smart TV. Por outro lado, é importante observar que o gráfico sugere que o computador é o dispositivo mais utilizado no perfil do meu pai. Isso não faz sentido, uma vez que ele também não usa computador. No entanto, é bastante comum que meu irmão acesse ocasionalmente os perfis tanto do meu pai quanto da minha mãe para dar sugestões de filmes e séries a pedido deles. Ele faz esse trabalho de acessar os perfis deles porque o perfil dele está configurado em inglês, e os filmes e séries que ele conhece podem ter nomes diferentes nos perfis dos meus pais. Esse detalhe pode ser uma possível explicação para o aparecimento do tempo de uso da Netflix pelo computador nos perfis dos meus pais. No entanto, é certo que as 213 horas de uso da Netflix pelo computador no perfil do meu pai não foram por ele.\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# Agrupa os dados por duração considerando os perfis e dispositivos\nprofiledevicehoras_group = (df_netflix3.\n                            groupby(['profile name', 'identf device'])['duration h'].\n                            sum().\n                            reset_index())\n\n# Traicing interativo das barras para cada dispositivo único e cria gráfico de barras\nfig = go.Figure()\nfor device in profiledevicehoras_group['identf device'].unique():\n    device_data = profiledevicehoras_group[profiledevicehoras_group['identf device'] == device]\n    fig.add_trace(go.Bar(x = device_data['profile name'], \n                         y = device_data['duration h'], \n                         name = device, \n                         hovertemplate = 'Horas: %{y:.2f}<br>'))\n\n# Layout do gráfico\nfig.update_layout(barmode = 'group',\n                  title = 'Tempo (Horas) de uso da Netflix em diferentes dispositivos em cada perfil',\n                  xaxis_title = 'Perfis', \n                  yaxis_title = 'Horas')\nfig.update_yaxes(tickformat = 'h')\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"e1730e84-6c9b-4504-bde0-c8bb2d2c062a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e1730e84-6c9b-4504-bde0-c8bb2d2c062a\")) {                    Plotly.newPlot(                        \"e1730e84-6c9b-4504-bde0-c8bb2d2c062a\",                        [{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"celular\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"Pai\"],\"y\":[205.3625,11.565833333333334,126.20666666666666],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"computador\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[571.6163888888889,771.4844444444444,21.383888888888887,213.73166666666665],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"tv\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[0.04666666666666667,26.60527777777778,1155.7972222222222,202.92833333333334],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"barmode\":\"group\",\"title\":{\"text\":\"Tempo (Horas) de uso da Netflix em diferentes dispositivos em cada perfil\"},\"xaxis\":{\"title\":{\"text\":\"Perfis\"}},\"yaxis\":{\"title\":{\"text\":\"Horas\"},\"tickformat\":\"h\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('e1730e84-6c9b-4504-bde0-c8bb2d2c062a');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 13**: Consumo da Netflix de cada perfil por dispositivos.\n\nO **Output 14** sugere que o tempo dedicado ao uso da Netflix nos perfis dos meus pais é maior nos finais de semana, estendendo-se até segunda e terça-feira. Isso faz sentido, uma vez que eles precisam trabalhar durante a semana. Por outro lado, meu irmão apresenta uma distribuição de uso mais uniforme ao longo dos dias da semana. Curiosamente, eu percebo que meu tempo de uso da Netflix aumenta conforme me aproximo do final de semana, o que pode parecer um pouco estranho.\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# Agrupa os dados por duração considerando os perfis e os dias da semana\nprofiledevicedias_group = (df_netflix3.\n                           groupby(['profile name', 'dias pt'])['duration h'].\n                           sum().\n                           reset_index())\n\n# Traicing interativo das barras para cada dia da semana e cria gráfico de barras\nfig = go.Figure()\nfor device in profiledevicedias_group['dias pt'].unique():\n    device_data = profiledevicedias_group[profiledevicedias_group['dias pt'] == device]\n    fig.add_trace(go.Bar(x = device_data['profile name'], \n                         y = device_data['duration h'], \n                         name = device, \n                         hovertemplate='Horas: %{y:.2f}<br>'))\n\n# Layout do gráfico\nfig.update_layout(barmode = 'group',\n                  title = 'Tempo (Horas) de uso da Netflix ao longo dos dias da semana em cada perfil',\n                  xaxis_title = 'Perfis', \n                  yaxis_title = 'Horas')\nfig.update_yaxes(tickformat = 'h')\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"ff62ac0c-7f81-420f-a42e-c585124b214a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ff62ac0c-7f81-420f-a42e-c585124b214a\")) {                    Plotly.newPlot(                        \"ff62ac0c-7f81-420f-a42e-c585124b214a\",                        [{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Segunda-feira\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[81.48166666666667,135.14888888888888,190.71472222222224,103.10194444444444],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Ter\\u00e7a-feira\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[93.90777777777778,96.12916666666666,169.8025,50.86277777777778],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Quarta-feira\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[99.00166666666667,103.83222222222223,103.73527777777778,47.35027777777778],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Quinta-feira\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[128.72416666666666,117.41944444444445,141.8636111111111,47.06111111111111],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Sexta-feira\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[116.73611111111111,110.74861111111112,137.93972222222223,65.88305555555556],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"S\\u00e1bado\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[143.64194444444445,133.95361111111112,240.09333333333333,123.92416666666666],\"type\":\"bar\"},{\"hovertemplate\":\"Horas: %{y:.2f}<br>\",\"name\":\"Domingo\",\"x\":[\"Eu\",\"Irm\\u00e3o\",\"M\\u00e3e\",\"Pai\"],\"y\":[178.44472222222223,115.45277777777778,357.1166666666667,180.55166666666668],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"barmode\":\"group\",\"title\":{\"text\":\"Tempo (Horas) de uso da Netflix ao longo dos dias da semana em cada perfil\"},\"xaxis\":{\"title\":{\"text\":\"Perfis\"}},\"yaxis\":{\"title\":{\"text\":\"Horas\"},\"tickformat\":\"h\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ff62ac0c-7f81-420f-a42e-c585124b214a');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 14**: Uso da Netflix de cada perfil por dias da semana.\n\nCom o objetivo de descobrir quais são as séries mais assistidas, foi gerado o gráfico no **Output 15**. Logo de início, podemos perceber que o gráfico indica que a série mais visualizada no perfil do meu pai é \"Supernatural\". Fiquei surpreso com a quantidade de horas dedicadas a essa série através do perfil dele, mas posso afirmar que boa parte desse tempo foi enquanto ela estava reproduzindo em segundo plano e ele realizava outras atividades, o que é bastante comum.\n\nAlém disso, o perfil da minha mãe apresenta um maior tempo de uso para as séries \"Betty em Nova York\", \"Lost\" e \"The 100\". Posso confirmar essas informações, pois presenciei diversas vezes ela assistindo a essas séries e, inclusive, tive boas conversas com ela sobre \"Lost\". No perfil do meu irmão, houve um maior tempo de uso da Netflix assistindo à série \"Vikings\", sendo que 36 horas também foram contabilizadas no perfil do meu pai.\n\nPor fim, o meu perfil teve um tempo maior de visualização da série \"Friends\". Essa não é necessariamente a minha série favorita, mas levando em consideração que ela possui 236 episódios, com uma média de 22 minutos cada, de acordo com o [IMDb](https://www.imdb.com/title/tt0583459/?ref_=tt_ep_pr), o que totaliza aproximadamente 87 horas, faz todo sentido a informação apresentada no gráfico.\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# Agrupa os dados por perfil e por titulo e soma as horas assistidas\nprofile_title_duration = (df_netflix3[df_netflix3['identf tipo'] == 'serie'].\n                          groupby(['profile name', 'identf titulo'])['duration h'].\n                          sum().\n                          reset_index())\n\n# Sorteia os dados por perfil e por tempo assistido em forma decrescente\nprofile_title_duration = profile_title_duration.sort_values(by = ['profile name', 'duration h'], \n                                                            ascending=[True, False])\n# As 5 séries mais assistidas de cada perfil\ntopfive = profile_title_duration.groupby('profile name').head(5)\n# Gráfico de barras interativo horizontal preenchido por perfil\nfig = px.bar(topfive, \n             x = 'duration h', \n             y = 'identf titulo', \n             color = 'profile name', \n             orientation = 'h',\n             title = 'As 5 séries mais assistidas de cada perfil (horas)')\n\n# Layout do gráfico\nfig.update_layout(xaxis_title = 'Horas assistidas', yaxis_title = 'Nome da série')\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"eff0ce88-ad84-4b99-918a-2289ce9ad6b8\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"eff0ce88-ad84-4b99-918a-2289ce9ad6b8\")) {                    Plotly.newPlot(                        \"eff0ce88-ad84-4b99-918a-2289ce9ad6b8\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"profile name=Eu<br>duration h=%{x}<br>identf titulo=%{y}<extra></extra>\",\"legendgroup\":\"Eu\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Eu\",\"offsetgroup\":\"Eu\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[90.16888888888889,40.95472222222222,36.903888888888886,36.6275,34.901944444444446],\"xaxis\":\"x\",\"y\":[\"Friends\",\"The Last Kingdom\",\"Community\",\"Breaking Bad\",\"Suits\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"profile name=Irm\\u00e3o<br>duration h=%{x}<br>identf titulo=%{y}<extra></extra>\",\"legendgroup\":\"Irm\\u00e3o\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Irm\\u00e3o\",\"offsetgroup\":\"Irm\\u00e3o\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[82.1986111111111,48.663333333333334,41.34583333333333,21.204722222222223,20.889166666666668],\"xaxis\":\"x\",\"y\":[\"Vikings\",\"Breaking Bad\",\"The Last Kingdom\",\"Hometown Cha-Cha-Cha\",\"Black Mirror\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"profile name=M\\u00e3e<br>duration h=%{x}<br>identf titulo=%{y}<extra></extra>\",\"legendgroup\":\"M\\u00e3e\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"M\\u00e3e\",\"offsetgroup\":\"M\\u00e3e\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[87.33722222222222,85.43444444444444,58.60055555555556,43.591388888888886,41.861666666666665],\"xaxis\":\"x\",\"y\":[\"Betty em Nova York\",\"Lost\",\"The 100\",\"Ponto Cego\",\"The Last Kingdom\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"profile name=Pai<br>duration h=%{x}<br>identf titulo=%{y}<extra></extra>\",\"legendgroup\":\"Pai\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Pai\",\"offsetgroup\":\"Pai\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[159.0247222222222,36.4225,35.91777777777778,11.892777777777777,11.648333333333333],\"xaxis\":\"x\",\"y\":[\"Supernatural\",\"Vikings\",\"Bates Motel\",\"Marvel - Punho de Ferro\",\"O \\u00daltimo Guardi\\u00e3o\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Horas assistidas\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Nome da s\\u00e9rie\"}},\"legend\":{\"title\":{\"text\":\"profile name\"},\"tracegroupgap\":0},\"title\":{\"text\":\"As 5 s\\u00e9ries mais assistidas de cada perfil (horas)\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('eff0ce88-ad84-4b99-918a-2289ce9ad6b8');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 15**: As cinco séries mais assistidas de cada perfil.\n\nLevando em conta apenas o meu perfil e a série que eu mais assisti na Netflix (Friends), o **Output 16** sugere que eu começava a assistir os episódios por volta da hora do almoço (11 da manhã) e tinha uma maior frequência de visualização por volta da meia-noite (com destaque para as 23h). Considerando que houve uma época em que eu tinha um horário um pouco peculiar, em que dormia em momentos específicos do dia e ficava mais ativo após as 21h até o amanhecer, o comportamento desse gráfico começa a fazer um pouco mais de sentido (só para constar, atualmente não tenho mais esse horário).\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\n# Base de dados referente a mim com apenas a série Friends\ndf_eu = df_netflix3[df_netflix3['profile name'] == 'Eu']\nfriends = df_eu[df_eu['identf titulo'].str.contains('Friends', regex = False)]\n\n# Atribui uma cópia da base até então para evitar warnings desnecessários\nfriends = friends.copy()\n# Cria coluna de horas do dia\nfriends['horas'] = friends['start time'].dt.hour\n\n# Agrupa os dados por duração considerando as horas do dia\nhoras_duracao = friends.groupby(['horas'])['identf episodio'].count().reset_index()\n\n# Traicing interativo das barras para cada hora do dia e cria gráfico de barras\nfig = go.Figure()\nfor hour in horas_duracao['horas'].unique():\n    hour_data = horas_duracao[horas_duracao['horas'] == hour]\n    fig.add_trace(go.Bar(x = hour_data['horas'], \n                         y = hour_data['identf episodio'], \n                         name = str(hour),\n                         hovertemplate = 'Episódios: %{y:.2f}<br>',\n                         showlegend = False))\n\n# Layout do gráfico\nfig.update_layout(barmode = 'group',\n                  title = 'Número de episódios de Friends assistidos por mim em diferentes momentos do dia',\n                  xaxis_title = 'Hora no dia do início da visualização',\n                  yaxis_title = 'Número de episódios assistidos')\nfig.update_yaxes(tickformat = 'h')\nfig.update_xaxes(tickmode = 'array', \n                 tickvals = horas_duracao['horas'].unique(), ticktext = horas_duracao['horas'].unique())\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"f46b02f0-9e33-480c-aab5-15fc579e42f4\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f46b02f0-9e33-480c-aab5-15fc579e42f4\")) {                    Plotly.newPlot(                        \"f46b02f0-9e33-480c-aab5-15fc579e42f4\",                        [{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"0\",\"showlegend\":false,\"x\":[0],\"y\":[15],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"1\",\"showlegend\":false,\"x\":[1],\"y\":[14],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"2\",\"showlegend\":false,\"x\":[2],\"y\":[13],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"3\",\"showlegend\":false,\"x\":[3],\"y\":[10],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"4\",\"showlegend\":false,\"x\":[4],\"y\":[5],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"5\",\"showlegend\":false,\"x\":[5],\"y\":[3],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"6\",\"showlegend\":false,\"x\":[6],\"y\":[6],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"7\",\"showlegend\":false,\"x\":[7],\"y\":[12],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"8\",\"showlegend\":false,\"x\":[8],\"y\":[5],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"9\",\"showlegend\":false,\"x\":[9],\"y\":[11],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"10\",\"showlegend\":false,\"x\":[10],\"y\":[13],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"11\",\"showlegend\":false,\"x\":[11],\"y\":[11],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"12\",\"showlegend\":false,\"x\":[12],\"y\":[12],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"13\",\"showlegend\":false,\"x\":[13],\"y\":[9],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"14\",\"showlegend\":false,\"x\":[14],\"y\":[9],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"15\",\"showlegend\":false,\"x\":[15],\"y\":[7],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"16\",\"showlegend\":false,\"x\":[16],\"y\":[8],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"17\",\"showlegend\":false,\"x\":[17],\"y\":[5],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"18\",\"showlegend\":false,\"x\":[18],\"y\":[6],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"19\",\"showlegend\":false,\"x\":[19],\"y\":[10],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"20\",\"showlegend\":false,\"x\":[20],\"y\":[9],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"21\",\"showlegend\":false,\"x\":[21],\"y\":[14],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"22\",\"showlegend\":false,\"x\":[22],\"y\":[8],\"type\":\"bar\"},{\"hovertemplate\":\"Epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"23\",\"showlegend\":false,\"x\":[23],\"y\":[21],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"barmode\":\"group\",\"title\":{\"text\":\"N\\u00famero de epis\\u00f3dios de Friends assistidos por mim em diferentes momentos do dia\"},\"xaxis\":{\"title\":{\"text\":\"Hora no dia do in\\u00edcio da visualiza\\u00e7\\u00e3o\"},\"tickmode\":\"array\",\"tickvals\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\"ticktext\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},\"yaxis\":{\"title\":{\"text\":\"N\\u00famero de epis\\u00f3dios assistidos\"},\"tickformat\":\"h\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('f46b02f0-9e33-480c-aab5-15fc579e42f4');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 16**: Número de episódios de Friends assistidos por mim considerando o início em diferentas momentos do dia.\n\nPara finalizar, o **Output 17** sugere que quando eu começava a assistir Friends às quintas-feiras, eu assistia a mais episódios. No entanto, não consigo pensar em possíveis motivos para que isso ocorresse.\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# Agrupa os dados por dias da semana considerando o número de episódios assistidos de Friends\nprofiledevicedias_group = (friends.\n                           groupby(['dias pt'])['identf episodio'].\n                           count().\n                           reset_index())\n\n# Traicing interativo das barras para cada dia da semana e cria gráfico de barras\nfig = go.Figure()\nfor device in profiledevicedias_group['dias pt'].unique():\n    device_data = profiledevicedias_group[profiledevicedias_group['dias pt'] == device]\n    fig.add_trace(go.Bar(x = device_data['dias pt'], \n                         y = device_data['identf episodio'], \n                         name = device, \n                         hovertemplate = 'Número de episódios: %{y:.2f}<br>',\n                         showlegend = False))\n\n# Layout do gráfico\nfig.update_layout(barmode = 'group',\n                  title = 'Número de episódios de Friends assistidos ao longo dos dias da semana',\n                  xaxis_title = 'Dias da semana', \n                  yaxis_title = 'Número de episódios')\nfig.update_yaxes(tickformat = 'd')\n\n# Plot do gráfico\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"36859ef8-04b0-4add-9251-fde533fc50ba\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"36859ef8-04b0-4add-9251-fde533fc50ba\")) {                    Plotly.newPlot(                        \"36859ef8-04b0-4add-9251-fde533fc50ba\",                        [{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Segunda-feira\",\"showlegend\":false,\"x\":[\"Segunda-feira\"],\"y\":[31],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Ter\\u00e7a-feira\",\"showlegend\":false,\"x\":[\"Ter\\u00e7a-feira\"],\"y\":[33],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Quarta-feira\",\"showlegend\":false,\"x\":[\"Quarta-feira\"],\"y\":[23],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Quinta-feira\",\"showlegend\":false,\"x\":[\"Quinta-feira\"],\"y\":[57],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Sexta-feira\",\"showlegend\":false,\"x\":[\"Sexta-feira\"],\"y\":[23],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"S\\u00e1bado\",\"showlegend\":false,\"x\":[\"S\\u00e1bado\"],\"y\":[33],\"type\":\"bar\"},{\"hovertemplate\":\"N\\u00famero de epis\\u00f3dios: %{y:.2f}<br>\",\"name\":\"Domingo\",\"showlegend\":false,\"x\":[\"Domingo\"],\"y\":[36],\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"barmode\":\"group\",\"title\":{\"text\":\"N\\u00famero de epis\\u00f3dios de Friends assistidos ao longo dos dias da semana\"},\"xaxis\":{\"title\":{\"text\":\"Dias da semana\"}},\"yaxis\":{\"title\":{\"text\":\"N\\u00famero de epis\\u00f3dios\"},\"tickformat\":\"d\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('36859ef8-04b0-4add-9251-fde533fc50ba');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n**Output 17**: Número de episódios de Friends assistidos por mim considerando o início em diferentas dias da semana.\n\n# Conclusão\n\nConsiderando que eu tenho familiaridade com o comportamento dos usuários dos perfis, naturalmente seria capaz de identificar se as análises fazem sentido ou não, além de oferecer possíveis explicações para certos resultados apresentados. Portanto, se os dados foram adequadamente tratados e limpos, com as informações extraídas de forma eficiente, relacionar os resultados com a realidade deveria ser uma tarefa simples para mim.\n\nAo longo do texto, pudemos observar que consegui estabelecer claramente a maioria dos gráficos (exceto o **Output 17**) e compreender se as informações apresentadas estavam coerentes. Isso demonstra que os dados estão bem organizados e fornecem informações relevantes, resultado de todo o processo que descrevi de limpeza e organização das informações, incluindo a manipulação de texto com o uso de expressões regulares.\n\nCaso os dados não fossem adequadamente tratados, os resultados apresentados poderiam conter inconsistências e levar a conclusões equivocadas, especialmente se análises mais complexas, como testes estatísticos ou A/B, fossem necessárias. Esse é um problema que observei em muitas pessoas, e muitas vezes ocorre devido à negligência de procedimentos e etapas básicas, como as que mencionei anteriormente. É crucial garantir uma abordagem cuidadosa desde o tratamento inicial dos dados até a interpretação final dos resultados, a fim de obter conclusões confiáveis e evitar erros na análise.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.12.1.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}